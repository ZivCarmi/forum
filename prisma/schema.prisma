// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  displayName    String    @unique
  role           Role      @default(USER)
  comments       Comment[]
  topics         Topic[]   @relation("OpenedTopics")
  followedTopics Topic[]   @relation("FollowedTopics")
  followedForums Forum[]   @relation("FollowedForums")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Category {
  id     Int    @id @default(autoincrement())
  title  String
  forums Forum[]
}

model Forum {
  id              Int       @id @default(autoincrement())
  title           String
  description     String?
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  subForums       Forum[]   @relation("ForumType")
  parentForum     Forum?    @relation("ForumType", fields: [parentForumId], references: [id])
  parentForumId   Int?
  followers       User[]    @relation("FollowedForums")
  topics          Topic[]
  allowNewTopics  Boolean   @default(true)
}

model Topic {
  id          Int       @id @default(autoincrement())
  title       String
  author      User      @relation("OpenedTopics", fields: [authorId], references: [id])
  authorId    Int
  forum       Forum     @relation(fields: [forumId], references: [id])
  forumId     Int
  comments    Comment[] @relation("Comments")
  followers   User[]    @relation("FollowedTopics")
  pinned      Boolean   @default(false)
  active      Boolean   @default(true)
  hot         Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id             Int      @id @default(autoincrement())
  content        String   @db.Text
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  topicInitiator Boolean  @default(false)
  topic          Topic    @relation("Comments", fields: [topicId], references: [id], onDelete: Cascade)
  topicId        Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}